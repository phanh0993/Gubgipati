// Test script ƒë·ªÉ ki·ªÉm tra file SQL note
const fs = require('fs');
const path = require('path');

function testSQLFile() {
  console.log('üß™ Test file SQL ƒë·ªÉ th√™m c·ªôt note...\n');

  try {
    // 1. Ki·ªÉm tra file SQL c√≥ t·ªìn t·∫°i kh√¥ng
    const sqlFilePath = path.join(__dirname, 'ADD_NOTE_COLUMN_TO_ORDER_ITEMS.sql');
    
    if (!fs.existsSync(sqlFilePath)) {
      console.log('‚ùå File SQL kh√¥ng t·ªìn t·∫°i:', sqlFilePath);
      return;
    }

    console.log('‚úÖ File SQL t·ªìn t·∫°i:', sqlFilePath);

    // 2. ƒê·ªçc n·ªôi dung file SQL
    const sqlContent = fs.readFileSync(sqlFilePath, 'utf8');
    console.log('\nüìù N·ªôi dung file SQL:');
    console.log('‚îÄ'.repeat(50));
    console.log(sqlContent);
    console.log('‚îÄ'.repeat(50));

    // 3. Ki·ªÉm tra c√°c th√†nh ph·∫ßn quan tr·ªçng
    console.log('\n3Ô∏è‚É£ Ki·ªÉm tra c√°c th√†nh ph·∫ßn quan tr·ªçng:');
    
    const hasAddColumn = sqlContent.includes('ADD COLUMN note TEXT');
    const hasComment = sqlContent.includes('COMMENT ON COLUMN');
    const hasCheck = sqlContent.includes('information_schema.columns');
    
    console.log(hasAddColumn ? '‚úÖ C√≥ l·ªánh ADD COLUMN note' : '‚ùå Thi·∫øu l·ªánh ADD COLUMN note');
    console.log(hasComment ? '‚úÖ C√≥ comment cho c·ªôt' : '‚ùå Thi·∫øu comment cho c·ªôt');
    console.log(hasCheck ? '‚úÖ C√≥ ki·ªÉm tra c·∫•u tr√∫c b·∫£ng' : '‚ùå Thi·∫øu ki·ªÉm tra c·∫•u tr√∫c b·∫£ng');

    // 4. H∆∞·ªõng d·∫´n ch·∫°y
    console.log('\n4Ô∏è‚É£ H∆∞·ªõng d·∫´n ch·∫°y SQL:');
    console.log('üìã ƒê·ªÉ ch·∫°y file SQL n√†y, b·∫°n c√≥ th·ªÉ:');
    console.log('   1. M·ªü Supabase Dashboard');
    console.log('   2. V√†o SQL Editor');
    console.log('   3. Copy n·ªôi dung file v√† paste v√†o editor');
    console.log('   4. Nh·∫•n Run ƒë·ªÉ th·ª±c thi');
    console.log('\nüìã Ho·∫∑c s·ª≠ d·ª•ng psql:');
    console.log('   psql -h [host] -U [user] -d [database] -f ADD_NOTE_COLUMN_TO_ORDER_ITEMS.sql');

    if (hasAddColumn && hasComment && hasCheck) {
      console.log('\nüéâ File SQL c√≥ ƒë·∫ßy ƒë·ªß c√°c th√†nh ph·∫ßn c·∫ßn thi·∫øt!');
      console.log('‚úÖ C√≥ th·ªÉ ch·∫°y file n√†y ƒë·ªÉ th√™m c·ªôt note v√†o b·∫£ng order_items.');
    } else {
      console.log('\n‚ö†Ô∏è  File SQL c√≥ th·ªÉ thi·∫øu m·ªôt s·ªë th√†nh ph·∫ßn quan tr·ªçng.');
    }

  } catch (error) {
    console.error('‚ùå L·ªói khi test file SQL:', error);
  }
}

// Ch·∫°y test
testSQLFile();
